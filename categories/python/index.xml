<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Jan's Blog</title><link>https://iamjanforster.de/categories/python/</link><description>Recent content in Python on Jan's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 10 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://iamjanforster.de/categories/python/index.xml" rel="self" type="application/rss+xml"/><item><title>A simple FastAPI boilerplate for ML models</title><link>https://iamjanforster.de/p/fastapi-ml-skeleton/</link><pubDate>Fri, 10 Nov 2023 00:00:00 +0000</pubDate><guid>https://iamjanforster.de/p/fastapi-ml-skeleton/</guid><description>&lt;h2 id="summary">
&lt;a href="#summary">#&lt;/a>
Summary
&lt;/h2>&lt;p>I&amp;rsquo;ve created a GitHub repository named &amp;ldquo;fastapi-ml-skeleton&amp;rdquo; to simplify the deployment of machine learning models into production. Utilizing FastAPI, this project offers a robust framework for serving models securely and efficiently. The repository includes a tested example using a regression model for demonstrating house price predictions, targeting Python 3.11+ environments and employing Poetry for dependency management.&lt;/p>
&lt;p>FastAPI creates a OpenAPI documention which you can directly use in Postman or generate code from for your client consuming this boilerplate code.
&lt;img src="https://iamjanforster.de/p/fastapi-ml-skeleton/sample_payload.jpg"
width="2100"
height="1615"
srcset="https://iamjanforster.de/p/fastapi-ml-skeleton/sample_payload_hu0f4f99d8bb23995de7ac4506bf940a6f_451721_480x0_resize_q75_box.jpg 480w, https://iamjanforster.de/p/fastapi-ml-skeleton/sample_payload_hu0f4f99d8bb23995de7ac4506bf940a6f_451721_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="OpenAPI spec created by FastAPI"
class="gallery-image"
data-flex-grow="130"
data-flex-basis="312px"
>&lt;/p>
&lt;h2 id="highlights">
&lt;a href="#highlights">#&lt;/a>
Highlights
&lt;/h2>&lt;ul>
&lt;li>&lt;strong>FastAPI Framework&lt;/strong>: Ensures fast, secure, and easy deployment.&lt;/li>
&lt;li>&lt;strong>Tested Sample Code&lt;/strong>: Includes a regression model to get you started quickly.&lt;/li>
&lt;li>&lt;strong>Comprehensive Documentation&lt;/strong>: Guides on installation, setup, and API usage.&lt;/li>
&lt;li>&lt;strong>Open Source&lt;/strong>: Available under the Apache-2.0 license.&lt;/li>
&lt;/ul>
&lt;h2 id="usage">
&lt;a href="#usage">#&lt;/a>
Usage
&lt;/h2>&lt;p>To use this skeleton, clone the repository and follow the setup instructions provided. It covers everything from installation and running the local server to API authentication. This framework is designed to be scalable, allowing for easy expansion and integration of various machine learning models.&lt;/p>
&lt;p>For more details, visit the &lt;a class="link" href="https://github.com/eightBEC/fastapi-ml-skeleton" target="_blank" rel="noopener"
>GitHub repository&lt;/a>.&lt;/p>
&lt;p>For feedback, issues and pull requests, please refer to the linked repository.&lt;/p></description></item><item><title>wkstools - A little helper for IBM Watson Natural Language Understanding with Watson Knowledge Studio</title><link>https://iamjanforster.de/p/wkstools/</link><pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate><guid>https://iamjanforster.de/p/wkstools/</guid><description>&lt;h2 id="intro">
&lt;a href="#intro">#&lt;/a>
Intro
&lt;/h2>&lt;p>Working with IBM Watson Knowledge Studio and IBM Natural Language Understanding (NLU) can be complicated, especially when relying on complex entity and relationship structures. Therefore, I created wkstools as a simple wrappe to work with the data provided by NLU.&lt;/p>
&lt;p>wkstools is essentially a convenience library that bridges the gap between raw NLU outputs and actionable data insights. Its primary function is to provide a set of utilities that make it easier to parse, interpret, and utilize entities and relations generated by IBM Watson NLU, aiming to reduce the overhead involved in manually sifting through JSON data.&lt;/p>
&lt;h2 id="usage">
&lt;a href="#usage">#&lt;/a>
Usage
&lt;/h2>&lt;p>Getting started with wkstools is straightforward. The library requires Python 3.6+ and Pydantic, ensuring a wide compatibility range. Installation is a breeze via pip, and the documentation provides clear examples of how to parse entities and relations from NLU JSON responses. This practical approach allows developers to quickly integrate wkstools into their projects, focusing more on leveraging NLU insights and less on data preprocessing.&lt;/p>
&lt;h3 id="installation">
&lt;a href="#installation">#&lt;/a>
Installation
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ pip install wkstools
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="example-parse-entities-and-relations">
&lt;a href="#example-parse-entities-and-relations">#&lt;/a>
Example: Parse entities and relations
&lt;/h3>&lt;p>To parse the NLU JSON response retrieved from IBM Natural Language Understanding, use:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">wkstools&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Your NLU JSON response to process&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">nlu_response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;{..., &amp;#34;relations&amp;#34;: [{&amp;#34;type&amp;#34;: &amp;#34;specifiesValue&amp;#34;, ...], &amp;#34;entities&amp;#34;: [...]}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">entities&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">wkstools&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse_entities&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nlu_response&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">relations&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">wkstools&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse_relations&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nlu_response&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>See the entity and relation models for available fields.&lt;/p>
&lt;h3 id="example-access-specfic-relations">
&lt;a href="#example-access-specfic-relations">#&lt;/a>
Example: Access specfic relations
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">wkstools&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Your NLU JSON response to process&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">nlu_response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;{..., &amp;#34;relations&amp;#34;: [{&amp;#34;type&amp;#34;: &amp;#34;specifiesValue&amp;#34;, ...], &amp;#34;entities&amp;#34;: [...]}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">relations&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">wkstools&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse_relations&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nlu_response&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">value_relations&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">wkstools&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_relations_by_type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">relations&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;specifiesValue&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="further-information">
&lt;a href="#further-information">#&lt;/a>
Further information
&lt;/h2>&lt;p>For those interested in diving deeper or integrating wkstools into their own projects, my &lt;a class="link" href="https://github.com/eightBEC/wkstools" target="_blank" rel="noopener"
>GitHub repository&lt;/a> offers comprehensive guidance, from installation instructions to detailed usage examples. You can explore the repository, contribute, or simply learn more about how wkstools can enhance your NLU projects by visiting wkstools on &lt;a class="link" href="https://github.com/eightBEC/wkstools" target="_blank" rel="noopener"
>GitHub&lt;/a>.&lt;/p></description></item></channel></rss>